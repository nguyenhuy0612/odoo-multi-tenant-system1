# SSL Configuration - Include this file only when SSL certificates are available
# To enable SSL:
# 1. Place your SSL certificates in the /etc/nginx/ssl/ directory
# 2. Uncomment the include line at the bottom of nginx.conf
# 3. Restart nginx

# ======================
# HTTP to HTTPS Redirects (when SSL is enabled)
# ======================

# HTTP redirect for main domains
server {
    listen 80;
    server_name khudroo.com www.khudroo.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTP redirect for all subdomains
server {
    listen 80;
    server_name *.khudroo.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# ======================
# HTTPS Servers
# ======================

# HTTPS SaaS Manager - Main application (khudroo.com and www.khudroo.com)
server {
    listen 443 ssl http2;
    server_name khudroo.com www.khudroo.com;
    
    # SSL Certificate Configuration (Wildcard certificate)
    ssl_certificate /etc/nginx/ssl/khudroo.com.crt;
    ssl_certificate_key /etc/nginx/ssl/khudroo.com.key;
    
    # Security headers
    add_header Strict-Transport-Security $hsts_header always;
    add_header X-Frame-Options $frame_options always;
    add_header X-Content-Type-Options $content_type_options always;
    add_header X-XSS-Protection $xss_protection always;
    add_header Referrer-Policy $referrer_policy always;
    # CSP temporarily disabled to fix CDN loading issues
    # add_header Content-Security-Policy "default-src 'self' https: data: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' data: https:; connect-src 'self' wss: https:; object-src 'none';" always;
    
    # Specific logging for SaaS Manager
    access_log /var/log/nginx/saas_manager_https.log worker_tracking;

    location / {
        proxy_pass http://saas_manager;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_redirect off;
    }

    location /login {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://saas_manager;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }
}

# HTTPS Tenant subdomains for khudroo.com
server {
    listen 443 ssl http2;
    server_name ~^(?<subdomain>.+)\.khudroo\.com$;

    # SSL Certificate Configuration (Same wildcard certificate)
    ssl_certificate /etc/nginx/ssl/khudroo.com.crt;
    ssl_certificate_key /etc/nginx/ssl/khudroo.com.key;
    
    # Security headers
    add_header Strict-Transport-Security $hsts_header always;
    add_header X-Frame-Options $frame_options always;
    add_header X-Content-Type-Options $content_type_options always;
    add_header X-XSS-Protection $xss_protection always;
    add_header Referrer-Policy $referrer_policy always;
    # CSP temporarily disabled to fix CDN loading issues
    # add_header Content-Security-Policy "default-src 'self' https: data: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; font-src 'self' data: https:; connect-src 'self' wss: https:; object-src 'none';" always;
    
    # Specific logging for tenant subdomains with detailed worker tracking
    access_log /var/log/nginx/tenants_https_worker_tracking.log worker_tracking;
    access_log /var/log/nginx/tenants_https_debug.log debug;

    # Skip reserved subdomains
    if ($subdomain ~* ^(manage|master|health|www|api|admin)$) {
        return 404;
    }

    # Handle web assets first (highest priority)
    location /web/assets/ {
        proxy_pass http://odoo_assets;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        
        # Asset-specific settings
        expires 1h;
        add_header Cache-Control "public, immutable";
        proxy_cache_valid 200 1h;
        
        # Better error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @assets_fallback;
    }

    # Handle static files
    location /web/static/ {
        proxy_pass http://odoo_assets;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        
        # Static file settings
        expires 1h;
        add_header Cache-Control "public, immutable";
        proxy_cache_valid 200 1h;
        
        # Better error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @assets_fallback;
    }

    # Fallback handler for failed asset requests
    location @assets_fallback {
        proxy_pass http://odoo_master;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
    }

    # Login endpoint with strict rate limiting
    location /web/login {
        limit_req zone=login burst=3 nodelay;
        
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
    }

    # API endpoints with higher rate limits
    location /web/dataset/call_kw {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
    }

    # Binary endpoints (images, files, etc.)
    location /web/binary/ {
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        
        # Cache binary files
        expires 1h;
        add_header Cache-Control "public";
    }

    # General requests (should be last)
    location / {
        limit_req zone=general burst=10 nodelay;
        
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        proxy_redirect off;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}

# ======================
# Development HTTPS (localhost)
# ======================

# HTTPS for localhost (development) - you'll need a self-signed certificate
server {
    listen 443 ssl http2;
    server_name localhost;
    
    # Self-signed certificate for development
    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    
    # Disable SSL verification for development
    ssl_verify_client off;
    
    # Specific logging for localhost HTTPS
    access_log /var/log/nginx/localhost_https.log worker_tracking;

    location / {
        proxy_pass http://saas_manager;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_redirect off;
    }

    location /login {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://saas_manager;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }
}

# HTTPS for localhost subdomains (development)
server {
    listen 443 ssl http2;
    server_name ~^(?<subdomain>.+)\.localhost$;

    # Self-signed certificate for development
    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    
    # Disable SSL verification for development
    ssl_verify_client off;
    
    # Specific logging for localhost subdomains
    access_log /var/log/nginx/localhost_subdomains_https.log worker_tracking;

    # Skip reserved subdomains
    if ($subdomain ~* ^(manage|master|health|www|api|admin)$) {
        return 404;
    }

    # Same location blocks as the khudroo.com subdomain server...
    
    location /web/assets/ {
        proxy_pass http://odoo_assets;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        
        expires 1h;
        add_header Cache-Control "public, immutable";
        proxy_cache_valid 200 1h;
        
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @assets_fallback;
    }

    location /web/static/ {
        proxy_pass http://odoo_assets;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        
        expires 1h;
        add_header Cache-Control "public, immutable";
        proxy_cache_valid 200 1h;
        
        proxy_intercept_errors on;
        error_page 500 502 503 504 = @assets_fallback;
    }

    location @assets_fallback {
        proxy_pass http://odoo_master;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
    }

    location /web/login {
        limit_req zone=login burst=3 nodelay;
        
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
    }

    location /web/dataset/call_kw {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
    }

    location /web/binary/ {
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        
        expires 1h;
        add_header Cache-Control "public";
    }

    location / {
        limit_req zone=general burst=10 nodelay;
        
        proxy_pass http://odoo_workers_sticky;
        proxy_set_header Host $proxy_headers_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Subdomain $subdomain;
        proxy_redirect off;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}

# ======================
# Health check endpoint (HTTPS)
# ======================
server {
    listen 443 ssl http2;
    server_name health.khudroo.com;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/khudroo.com.crt;
    ssl_certificate_key /etc/nginx/ssl/khudroo.com.key;

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
