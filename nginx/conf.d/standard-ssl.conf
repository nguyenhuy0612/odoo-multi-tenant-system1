# SSL Configuration for khudroo.com (Standard Certificate)


server {
    listen 80;
    server_name khudroo.com www.khudroo.com;
    
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name khudroo.com www.khudroo.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/khudroo.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/khudroo.com/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Health check
    location /ssl-health {
        return 200 "SSL OK - Main Domain Only";
        add_header Content-Type text/plain;
    }
    
    # Main proxy to SaaS Manager
    location / {
        proxy_pass http://saas_manager;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# Tenant subdomains SSL configuration
server {
    listen 80;
    server_name ~^(?<subdomain>[^\.]+)\.khudroo\.com$;
    
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name ~^(?<subdomain>[^\.]+)\.khudroo\.com$;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/khudroo.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/khudroo.com/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Custom error pages
    error_page 400 /errors/error_400.html;
    error_page 401 /errors/error_401.html;
    error_page 403 /errors/error_403.html;
    error_page 404 /errors/error_404.html;
    error_page 405 /errors/error_405.html;
    error_page 500 /errors/error_500.html;
    error_page 501 /errors/error_500.html;
    error_page 502 /errors/error_502.html;
    error_page 503 /errors/error_503.html;
    error_page 504 /errors/error_504.html;
    
    # Error pages location
    location ^~ /errors/ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public, immutable";
        
        # Handle CSS files
        location ~* /errors/.*\.css$ {
            add_header Content-Type text/css;
            expires 1d;
            add_header Access-Control-Allow-Origin *;
        }
        
        # Handle JS files  
        location ~* /errors/.*\.js$ {
            add_header Content-Type application/javascript;
            expires 1d;
            add_header Access-Control-Allow-Origin *;
        }
        
        # Handle HTML files
        location ~* /errors/.*\.html$ {
            add_header Content-Type text/html;
        }
        
        # Handle images
        location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            expires 1d;
            add_header Access-Control-Allow-Origin *;
        }
    }
    
    # Skip reserved subdomains
    if ($subdomain ~* "^(manage|master|health|www|api|admin)$") {
        return 404;
    }
    
    # Block database selector for tenant subdomains
    location /web/database/selector {
        return 404;
    }
    
    # Health check
    location /health {
        return 200 "SSL OK - Tenant: $subdomain";
        add_header Content-Type text/plain;
    }
    
    # Tenant proxy to Odoo workers
    location / {
        # Add debugging headers
        add_header X-Debug-Server "odoo_workers_ssl" always;
        add_header X-Debug-Subdomain "$subdomain" always;
        add_header X-Debug-Host "$host" always;
        
        proxy_pass http://odoo_workers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Subdomain $subdomain;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enable error interception for custom error pages
        proxy_intercept_errors on;
    }
}
