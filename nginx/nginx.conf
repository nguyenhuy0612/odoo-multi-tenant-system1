user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enhanced log format with detailed worker tracking
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr response_time: $upstream_response_time '
                    'subdomain: $subdomain';

    # Detailed worker tracking log format
    log_format worker_tracking '$time_local | '
                              'Client: $remote_addr | '
                              'Request: "$request" | '
                              'Status: $status | '
                              'Subdomain: $subdomain | '
                              'Worker: $upstream_addr | '
                              'Worker_Status: $upstream_status | '
                              'Response_Time: ${upstream_response_time}s | '
                              'Total_Time: ${request_time}s | '
                              'Bytes_Sent: $body_bytes_sent | '
                              'User_Agent: "$http_user_agent"';

    # Simplified worker log format for easy parsing
    log_format worker_simple '$time_local - $request - Worker: $upstream_addr - Status: $upstream_status - Time: ${upstream_response_time}s';

    # Debug log format for troubleshooting
    log_format debug '$time_local | $remote_addr | "$request" | $status | '
                     'Worker: $upstream_addr | Worker_Status: $upstream_status | '
                     'Response_Time: $upstream_response_time | Request_Time: $request_time | '
                     'Subdomain: $subdomain | Connection: $connection_requests';

    # Main access log
    access_log /var/log/nginx/access.log main;
    
    # Detailed worker tracking log
    access_log /var/log/nginx/worker_tracking.log worker_tracking;
    
    # Simple worker log for monitoring
    access_log /var/log/nginx/worker_simple.log worker_simple;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        text/json;

    # Client settings
    client_max_body_size 200M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;
    proxy_buffering on;
    proxy_http_version 1.1;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/m;

    # SSL Configuration (only applied when SSL is enabled)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers maps (conditional on scheme)
    map $scheme $hsts_header {
        https "max-age=63072000; includeSubDomains; preload";
        default "";
    }

    map $scheme $frame_options {
        https "DENY";
        default "SAMEORIGIN";
    }

    map $scheme $content_type_options {
        default "nosniff";
    }

    map $scheme $xss_protection {
        default "1; mode=block";
    }

    map $scheme $referrer_policy {
        default "no-referrer-when-downgrade";
    }

    map $scheme $csp_policy {
        https "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'";
        default "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'";
    }

    # Upstream definitions
    upstream saas_manager {
        server saas_manager:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream odoo_master {
        server odoo_master:8069 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream odoo_workers {
        least_conn;
        server odoo_worker1:8069 max_fails=3 fail_timeout=30s weight=1;
        server odoo_worker2:8069 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    # Session-aware load balancing for better user experience
    upstream odoo_workers_sticky {
        ip_hash;  # Routes same IP to same server for session consistency
        server odoo_worker1:8069 max_fails=3 fail_timeout=30s;
        server odoo_worker2:8069 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Dedicated upstream for assets to ensure consistency
    upstream odoo_assets {
        server odoo_worker1:8069 max_fails=2 fail_timeout=10s;
        server odoo_worker2:8069 max_fails=2 fail_timeout=10s backup;
        keepalive 8;
    }

    # Common proxy headers map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Common proxy headers for all locations
    map $host $proxy_headers_host {
        default $host;
    }

    # ======================
    # HTTP Servers (Primary)
    # ======================

    # HTTP SaaS Manager - Main application (localhost and khudroo without subdomain)
    server {
        listen 80;
        server_name khudroo.com www.khudroo.com localhost;
        
        # Security headers for HTTP
        add_header X-Frame-Options $frame_options always;
        add_header X-Content-Type-Options $content_type_options always;
        add_header X-XSS-Protection $xss_protection always;
        add_header Referrer-Policy $referrer_policy always;
        add_header Content-Security-Policy $csp_policy always;
        
        # Specific logging for SaaS Manager
        access_log /var/log/nginx/saas_manager_http.log worker_tracking;

        location / {
            proxy_pass http://saas_manager;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_redirect off;
        }

        location /login {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://saas_manager;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }
    }

    # HTTP Tenant subdomains
    server {
        listen 80;
        server_name ~^(?<subdomain>.+)\.khudroo\.com$ ~^(?<subdomain>.+)\.localhost$;

        # Security headers for HTTP
        add_header X-Frame-Options $frame_options always;
        add_header X-Content-Type-Options $content_type_options always;
        add_header X-XSS-Protection $xss_protection always;
        add_header Referrer-Policy $referrer_policy always;
        add_header Content-Security-Policy $csp_policy always;
        
        # Specific logging for tenant subdomains with detailed worker tracking
        access_log /var/log/nginx/tenants_http_worker_tracking.log worker_tracking;
        access_log /var/log/nginx/tenants_http_debug.log debug;

        # Skip reserved subdomains
        if ($subdomain ~* ^(manage|master|health|www|api|admin)$) {
            return 404;
        }

        # Handle web assets first (highest priority)
        location /web/assets/ {
            proxy_pass http://odoo_assets;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
            
            # Asset-specific settings
            expires 1h;
            add_header Cache-Control "public, immutable";
            proxy_cache_valid 200 1h;
            
            # Better error handling
            proxy_intercept_errors on;
            error_page 500 502 503 504 = @assets_fallback;
        }

        # Handle static files
        location /web/static/ {
            proxy_pass http://odoo_assets;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
            
            # Static file settings
            expires 1h;
            add_header Cache-Control "public, immutable";
            proxy_cache_valid 200 1h;
            
            # Better error handling
            proxy_intercept_errors on;
            error_page 500 502 503 504 = @assets_fallback;
        }

        # Fallback handler for failed asset requests
        location @assets_fallback {
            proxy_pass http://odoo_master;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
        }

        # Login endpoint with strict rate limiting
        location /web/login {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://odoo_workers_sticky;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
        }

        # API endpoints with higher rate limits
        location /web/dataset/call_kw {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://odoo_workers_sticky;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
        }

        # Binary endpoints (images, files, etc.)
        location /web/binary/ {
            proxy_pass http://odoo_workers_sticky;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
            
            # Cache binary files
            expires 1h;
            add_header Cache-Control "public";
        }

        # General requests (should be last)
        location / {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://odoo_workers_sticky;
            proxy_set_header Host $proxy_headers_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
            proxy_redirect off;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }

    # ======================
    # Health check endpoint (HTTP)
    # ======================
    server {
        listen 80;
        server_name health.khudroo.com health.localhost;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # ======================
    # HTTPS Servers (Only if SSL certificates exist)
    # Include this file only if you have SSL certificates
    # ======================
    
    # include /etc/nginx/conf.d/ssl.conf;
}
