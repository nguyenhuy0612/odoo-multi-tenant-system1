user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Enhanced logging for debugging
    log_format debug_format '$time_local | $remote_addr | "$request" | $status | '
                           'upstream: $upstream_addr | upstream_status: $upstream_status | '
                           'upstream_response_time: $upstream_response_time | '
                           'request_time: $request_time | '
                           'subdomain: $subdomain | '
                           'host: $host | '
                           'error: "$upstream_http_x_error"';

    access_log /var/log/nginx/access.log debug_format;
    error_log /var/log/nginx/error.log debug;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Client settings
    client_max_body_size 200M;
    client_body_buffer_size 128k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 16k;

    # Proxy settings with better error handling
    proxy_connect_timeout 10s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 8k;
    proxy_buffers 8 32k;
    proxy_busy_buffers_size 64k;
    proxy_intercept_errors on;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 2;
    proxy_next_upstream_timeout 30s;

    # Upstream definitions with health checks
    upstream saas_manager {
        server saas_manager:8000 max_fails=2 fail_timeout=10s;
        keepalive 8;
    }

    upstream odoo_master {
        server odoo_master:8069 max_fails=2 fail_timeout=10s;
        keepalive 8;
    }

    upstream odoo_workers {
        least_conn;
        server odoo_worker1:8069 max_fails=2 fail_timeout=10s;
        server odoo_worker2:8069 max_fails=2 fail_timeout=10s;
        keepalive 8;
    }

    # Default server to catch all unmatched requests
    server {
        listen 80 default_server;
        server_name _;
        
        # Custom error pages for default server
        error_page 400 /errors/error_400.html;
        error_page 401 /errors/error_401.html;
        error_page 403 /errors/error_403.html;
        error_page 404 /errors/error_404.html;
        error_page 500 /errors/error_500.html;
        error_page 502 /errors/error_502.html;
        error_page 503 /errors/error_503.html;
        error_page 504 /errors/error_504.html;
        
        location / {
            return 404; # Return 404 instead of 444 to trigger error page
        }
        
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        # Error pages location - MUST come before other locations
# Add this to your nginx.conf in each server block where you have error pages

        # Error pages location - Updated configuration
        location ^~ /errors/ {
            root /usr/share/nginx/html;
            
            # Remove 'internal' directive to allow direct access to CSS/JS files
            # internal; # Comment this out or remove it
            
            expires 1d;
            add_header Cache-Control "public, immutable";
            
                # Override content type for images
            location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg|webp)$ {
                # Let nginx auto-detect the correct MIME type for images
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            # Handle CSS files
            location ~* /errors/.*\.css$ {
                add_header Content-Type text/css;
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Handle JS files  
            location ~* /errors/.*\.js$ {
                add_header Content-Type application/javascript;
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Handle HTML files
            location ~* /errors/.*\.html$ {
                add_header Content-Type text/html;
                # Keep internal for HTML files only if you want
                # internal;
            }
            
            # Handle other static assets
            location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg)$ {
                expires 1d;
                add_header Cache-Control "public, immutable";
            }
        }
    }

    # SaaS Manager - Main application
    server {
        listen 80;
        server_name khudroo.com www.khudroo.com localhost;
        
        # Let's Encrypt ACME challenge location (inline to avoid include issues)
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
            allow all;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # Enable detailed error logging for this server
        access_log /var/log/nginx/saas_manager.log debug_format;
        error_log /var/log/nginx/saas_manager_error.log debug;

        # Custom error pages - MUST be defined before locations
        error_page 400 /errors/error_400.html;
        error_page 401 /errors/error_401.html;
        error_page 403 /errors/error_403.html;
        error_page 404 /errors/error_404.html;
        error_page 500 /errors/error_500.html;
        error_page 501 /errors/error_500.html;
        error_page 502 /errors/error_502.html;
        error_page 503 /errors/error_503.html;
        error_page 504 /errors/error_504.html;

        # Error pages location - MUST come first
        # Error pages location - Updated configuration
        location ^~ /errors/ {
            root /usr/share/nginx/html;
            
            # Remove 'internal' directive to allow direct access to CSS/JS files
            # internal; # Comment this out or remove it
            
            expires 1d;
            add_header Cache-Control "public, immutable";
            
                # Override content type for images
            location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg|webp)$ {
                # Let nginx auto-detect the correct MIME type for images
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }

            # Handle CSS files
            location ~* /errors/.*\.css$ {
                add_header Content-Type text/css;
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Handle JS files  
            location ~* /errors/.*\.js$ {
                add_header Content-Type application/javascript;
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Handle HTML files
            location ~* /errors/.*\.html$ {
                add_header Content-Type text/html;
                # Keep internal for HTML files only if you want
                # internal;
            }
            
            # Handle other static assets
            location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg)$ {
                expires 1d;
                add_header Cache-Control "public, immutable";
            }
        }

        location /health {
            access_log off;
            return 200 "saas manager proxy healthy\n";
            add_header Content-Type text/plain;
        }

        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        location / {
            # Add debugging headers
            add_header X-Debug-Server "saas_manager" always;
            add_header X-Debug-Host "$host" always;
            
            proxy_pass http://saas_manager;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Better error handling
            proxy_intercept_errors on;
        }
    }

    # Tenant subdomains
    server {
        listen 80;
        server_name ~^(?<subdomain>[^\.]+)\.khudroo\.com$ ~^(?<subdomain>[^\.]+)\.localhost$;

        # Let's Encrypt ACME challenge location (inline to avoid include issues)
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
            allow all;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Enable detailed error logging for tenant requests
        access_log /var/log/nginx/tenants.log debug_format;
        error_log /var/log/nginx/tenants_error.log debug;

        # Custom error pages - MUST be defined before locations
        error_page 400 /errors/error_400.html;
        error_page 401 /errors/error_401.html;
        error_page 403 /errors/error_403.html;
        error_page 404 /errors/error_404.html;
        error_page 500 /errors/error_500.html;
        error_page 501 /errors/error_500.html;
        error_page 502 /errors/error_502.html;
        error_page 503 /errors/error_503.html;
        error_page 504 /errors/error_504.html;


        # Error pages location - MUST come first

        location ^~ /web/database/selector {
            return 404;
        }

        # Error pages location - Updated configuration
        location ^~ /errors/ {
            root /usr/share/nginx/html;
            
            # Remove 'internal' directive to allow direct access to CSS/JS files
            # internal; # Comment this out or remove it
            
            expires 1d;
            add_header Cache-Control "public, immutable";
                # Override content type for images
            location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg|webp)$ {
                # Let nginx auto-detect the correct MIME type for images
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            # Handle CSS files
            location ~* /errors/.*\.css$ {
                add_header Content-Type text/css;
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Handle JS files  
            location ~* /errors/.*\.js$ {
                add_header Content-Type application/javascript;
                expires 1d;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Handle HTML files
            location ~* /errors/.*\.html$ {
                add_header Content-Type text/html;
                # Keep internal for HTML files only if you want
                # internal;
            }
            
            # Handle other static assets
            location ~* /errors/.*\.(png|jpg|jpeg|gif|ico|svg)$ {
                expires 1d;
                add_header Cache-Control "public, immutable";
            }
        }

        # Skip reserved subdomains
        if ($subdomain ~* "^(manage|master|health|www|api|admin)$") {
            return 404;
        }

        location /health {
            access_log off;
            return 200 "tenant proxy healthy - subdomain: $subdomain\n";
            add_header Content-Type text/plain;
        }

        location / {
            # Add debugging headers
            add_header X-Debug-Server "odoo_workers" always;
            add_header X-Debug-Subdomain "$subdomain" always;
            add_header X-Debug-Host "$host" always;
            
            proxy_pass http://odoo_workers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Subdomain $subdomain;
            
            # Better error handling
            proxy_intercept_errors on;
        }
    }

    # Include additional configuration files
    include /etc/nginx/conf.d/*.conf;
    
    # REMOVED: Global error pages that were conflicting
}