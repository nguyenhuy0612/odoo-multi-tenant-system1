version: "3.8"

services:
  # Certbot service for Let's Encrypt SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./ssl/certbot/conf:/etc/letsencrypt
      - ./ssl/certbot/www:/var/www/certbot
      - ./ssl/logs:/var/log/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@domain.com --agree-tos --no-eff-email --keep-until-expiring --expand -d khudroo.com -d www.khudroo.com -d *.khudroo.com
    networks:
      - odoo_network

  # Modified nginx service with Let's Encrypt integration
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/letsencrypt.conf:/etc/nginx/letsencrypt.conf
      - ./nginx/errors/:/usr/share/nginx/html/errors/
      # Let's Encrypt volumes
      - ./ssl/certbot/conf:/etc/letsencrypt
      - ./ssl/certbot/www:/var/www/certbot
      # DH parameters for additional security
      - ./ssl/dhparam.pem:/etc/nginx/ssl/dhparam.pem
    networks:
      - odoo_network
    depends_on:
      - saas_manager
      - odoo_master
      - odoo_worker1
      - odoo_worker2
    restart: unless-stopped
    command: >
      sh -c "
        # Wait for certbot to generate certificates if they don't exist
        while [ ! -f /etc/letsencrypt/live/khudroo.com/fullchain.pem ]; do
          echo 'Waiting for SSL certificates...';
          sleep 5;
        done;
        echo 'SSL certificates found, starting Nginx...';
        nginx -g 'daemon off;'
      "

networks:
  odoo_network:
    external: true

volumes:
  ssl_certbot_conf:
    driver: local
  ssl_certbot_www:
    driver: local